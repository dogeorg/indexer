name: CI

on:
  push:
    branches: [main, master]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main, master]

# Required to publish to GHCR
permissions:
  contents: read
  packages: write

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies (ZeroMQ for CGO)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends pkg-config libzmq3-dev

      - name: Determine module directory
        id: paths
        shell: bash
        run: |
          if [[ -f go.mod ]]; then
            echo "mod_dir=." >> "$GITHUB_OUTPUT"
          elif [[ -f indexer/go.mod ]]; then
            echo "mod_dir=indexer" >> "$GITHUB_OUTPUT"
          else
            echo "No go.mod found at repo root or indexer/" >&2
            exit 1
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ steps.paths.outputs.mod_dir }}/go.mod
          cache: true

      - name: Download modules
        working-directory: ${{ steps.paths.outputs.mod_dir }}
        run: go mod download

      - name: Build
        working-directory: ${{ steps.paths.outputs.mod_dir }}
        env:
          CGO_ENABLED: "1" # required by mattn/go-sqlite3
        run: go build -v ./...

      - name: Test
        working-directory: ${{ steps.paths.outputs.mod_dir }}
        env:
          CGO_ENABLED: "1"
        run: go test -v ./...

  docker:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Build and Push Docker image
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine module directory
        id: paths
        shell: bash
        run: |
          if [[ -f go.mod ]]; then
            echo "mod_dir=." >> "$GITHUB_OUTPUT"
          elif [[ -f indexer/go.mod ]]; then
            echo "mod_dir=indexer" >> "$GITHUB_OUTPUT"
          else
            echo "No go.mod found at repo root or indexer/" >&2
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Generate Dockerfile (multi-stage, CGO-ready)
        run: |
          cat > Dockerfile <<'EOF'
          # syntax=docker/dockerfile:1.5
          FROM golang:1.21-bookworm AS build
          ARG MODULE_DIR=.
          WORKDIR /src
          # Install build dependencies for CGO (ZeroMQ, pkg-config, toolchain)
          RUN apt-get update && apt-get install -y --no-install-recommends build-essential pkg-config libzmq3-dev && rm -rf /var/lib/apt/lists/*
          # Copy module files first for better caching
          COPY ${MODULE_DIR}/go.mod ${MODULE_DIR}/go.sum ./
          RUN --mount=type=cache,target=/go/pkg/mod \
              go mod download
          # Copy source
          COPY ${MODULE_DIR}/ ./
          # Build with CGO enabled (needed for sqlite3 and zmq4)
          ENV CGO_ENABLED=1
          RUN --mount=type=cache,target=/go/pkg/mod \
              --mount=type=cache,target=/root/.cache/go-build \
              go build -o /out/indexer ./main.go

          # Runtime image with libzmq5 available
          FROM debian:bookworm-slim
          WORKDIR /app
          RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates libzmq5 && rm -rf /var/lib/apt/lists/*
          COPY --from=build /out/indexer /app/indexer
          EXPOSE 8000
          ENTRYPOINT ["/app/indexer"]
          EOF

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          build-args: |
            MODULE_DIR=${{ steps.paths.outputs.mod_dir }}
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
